import paho.mqtt.client as mqtt
import json


# Fonction
def on_connect(mqttc, obj, flags, rc):
    print("rc: " + str(rc))


def on_message(mqttc, obj, msg):
    temperature = msg.payload
    channel = msg.topic

    # Extraction Json
    DocHumi = json.loads(msg.payload)
    print(DocHumi)
    datas = DocHumi["data"]
    print(datas)
    hum = datas[len(datas)-1]["humidite"]
    print(hum)

#Ouverture de la valve 
    if float(hum) > 30:

        Valve_ouvert()
        print("Valve ouverte")
        
#Fermeture de la valve 
    if float(hum) < 30:

            Valve_fermer()
            print("Valve fermée")
#Fonction mqtt
def on_publish(mqttc, obj, mid):
    print("message envoyé")


def on_subscribe(mqttc, obj, mid, granted_qos):
    print("Subscribed: " + str(mid) + " " + str(granted_qos))



def Valve_ouvert():
    mqttc.publish("Valve", "ON")
    print('ouvert')

def Valve_fermer():
    mqttc.publish("Valve", "OFF")
    print('ferme')

#Initialisation des valeurs

mqttc = mqtt.Client()
mqttc.on_message = on_message
mqttc.on_connect = on_connect
mqttc.on_publish = on_publish
mqttc.on_subscribe = on_subscribe

#Connection/Subscribe
mqttc.connect("broker.emqx.io", 1883, 60)
mqttc.subscribe("terrarium/#", 0)
###########
def getvaleurs():
    print("Accepter")


mqttc.loop_forever()


#Commande pour teste
#mosquitto_pub -h localhost -t "sensors/temperature" -m 22.5
# {"data":[{"humidite":54.8,"temperature":22.9},
# {"humidite":48.5,"temperature":20.7},
# {"humidite":49.6,"temperature":22.6}],
# "description":"OYO",
# "time":"Wed Dec 05 17:46:13 CET 2018",
# "devEUI":"1557344E6F398120"}
